#include<iostream>
#include<string>
#include <limits>
using namespace std;

class Node {
public:
    string data;
    Node* firstChild;
    Node* nextChild;

    Node(string value) {
        data = value;
        firstChild = nullptr;
        nextChild = nullptr;
    }

    void insert(string val) {
        Node* newNode = new Node(val);
        if (!firstChild) {
            firstChild = newNode;
        } else {
            Node* temp = firstChild;
            while (temp->nextChild) {
                temp = temp->nextChild;
            }
            temp->nextChild = newNode;
        }
    }

    void display(int level = 0) {
        for (int i = 0; i < level; i++) {
            cout << "\t";
        }
        cout << data << endl;
        if (firstChild) {
            firstChild->display(level + 1);
        }
        if (nextChild) {
            nextChild->display(level);
        }
    }
};

// Function to handle input validation
int getValidIntegerInput() {
    int num;
    while (true) {
        cin >> num;
        if (cin.fail()) {
            cin.clear();  // clear the error flag
            cin.ignore(numeric_limits<streamsize>::max(), '\n');  // discard invalid input
            cout << "Invalid input. Please enter a valid integer: ";
        } else {
            cin.ignore(numeric_limits<streamsize>::max(), '\n');  // discard any extra input
            return num;
        }
    }
}

int main() {
    string bookTitle;
    cout << "Enter title of book: ";
    getline(cin, bookTitle);
    Node* book = new Node(bookTitle);

    cout << "Enter number of chapters in the book: ";
    int numChapters = getValidIntegerInput();

    for (int i = 0; i < numChapters; i++) {
        string chapterTitle;
        cout << "Enter title of chapter " << (i + 1) << ": ";
        getline(cin, chapterTitle);
        book->insert(chapterTitle);

        cout << "Enter number of sections in chapter " << chapterTitle << ": ";
        int numSections = getValidIntegerInput();

        Node* chapterNode = book->firstChild;
        while (chapterNode) {
            if (chapterNode->data == chapterTitle) {
                for (int j = 0; j < numSections; j++) {
                    string sectionTitle;
                    cout << "Enter title of section " << (j + 1) << " in chapter " << chapterTitle << ": ";
                    getline(cin, sectionTitle);
                    chapterNode->insert(sectionTitle);

                    cout << "Enter number of subsections in section " << sectionTitle << ": ";
                    int numSubsections = getValidIntegerInput();

                    Node* sectionNode = chapterNode->firstChild;
                    while (sectionNode) {
                        if (sectionNode->data == sectionTitle) {
                            for (int k = 0; k < numSubsections; k++) {
                                string subsectionTitle;
                                cout << "Enter title of subsection " << (k + 1) << " in section " << sectionTitle << ": ";
                                getline(cin, subsectionTitle);
                                sectionNode->insert(subsectionTitle);
                            }
                            break;
                        }
                        sectionNode = sectionNode->nextChild;
                    }
                }
                break;
            }
            chapterNode = chapterNode->nextChild;
        }
    }

    cout << "\nBook structure:\n";
    book->display();
    return 0;
}
